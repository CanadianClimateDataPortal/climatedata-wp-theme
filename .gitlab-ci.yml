default:
  tags:
    - runner_CRIM

stages:
  - build
  - tag
  - deploy

variables:
  PLUGINS_PATH: "dockerfiles/mounts/wp-plugins"
  DOCKER_IMAGE_TASK_RUNNER: "task_runner"
  DOCKER_IMAGE_PORTAL: "$DOCKER_IMAGE_REGISTRY/portal"

.validate-deployment-tag:
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $CI_COMMIT_TAG != "preprod" && $CI_COMMIT_TAG != "uat"
      variables:
        DEPLOYMENT_TAG: "qa"
        INSTANCE_USER: $INSTANCE_USER_QA
        INSTANCE_IP: $INSTANCE_IP_QA

    - if: $CI_COMMIT_TAG == "uat" && $CI_JOB_STAGE != "build"
      variables:
        DEPLOYMENT_TAG: "uat"
        INSTANCE_USER: $INSTANCE_USER_UAT
        INSTANCE_IP: $INSTANCE_IP_UAT

    - if: $CI_COMMIT_TAG == "preprod" && $CI_JOB_STAGE != "build"
      variables:
        DEPLOYMENT_TAG: "preprod"
        INSTANCE_USER: $INSTANCE_USER_PREPROD
        INSTANCE_IP: $INSTANCE_IP_PREPROD

build-push-portal-image:
  stage: build
  extends: .validate-deployment-tag

  before_script:
  - docker build -f dockerfiles/build/task-runner/Dockerfile -t $DOCKER_IMAGE_TASK_RUNNER .
  - mkdir $PLUGINS_PATH
  - plugins=$(grep -v -e '^\s*$' -e '^#' ./dockerfiles/build/www/wp-plugins/local.txt)
  - >
    for plugin in $plugins;
    do
        curl \
          --header "JOB-TOKEN: $CI_JOB_TOKEN" \
          --location "$CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/generic/wp-plugins/1.0.0/$plugin" \
          --output $PLUGINS_PATH/$plugin;
    done
  - echo $DOCKER_DEPLOY_TOKEN | docker login -u $DOCKER_DEPLOY_USER $DOCKER_IMAGE_REGISTRY --password-stdin

  script:
  - >
    docker build
    --target production
    --build-arg TASK_RUNNER_IMAGE=$DOCKER_IMAGE_TASK_RUNNER
    --build-arg LOCAL_WP_PLUGINS_DIR=$PLUGINS_PATH
    -t $DOCKER_IMAGE_PORTAL
    .
  - docker image tag $DOCKER_IMAGE_PORTAL $DOCKER_IMAGE_PORTAL:$CI_COMMIT_SHORT_SHA
  - docker push $DOCKER_IMAGE_PORTAL:$CI_COMMIT_SHORT_SHA

  after_script:
  - docker logout $DOCKER_IMAGE_REGISTRY

tag-image:
  stage: tag
  extends: .validate-deployment-tag

  before_script:
  - echo $DOCKER_DEPLOY_TOKEN | docker login -u $DOCKER_DEPLOY_USER $DOCKER_IMAGE_REGISTRY --password-stdin

  script:
  - docker pull $DOCKER_IMAGE_PORTAL:$CI_COMMIT_SHORT_SHA
  - docker image tag $DOCKER_IMAGE_PORTAL:$CI_COMMIT_SHORT_SHA $DOCKER_IMAGE_PORTAL:$DEPLOYMENT_TAG
  - docker push $DOCKER_IMAGE_PORTAL:$DEPLOYMENT_TAG

  after_script:
  - docker logout $DOCKER_IMAGE_REGISTRY

update-instance:
  stage: deploy
  extends: .validate-deployment-tag

  before_script:
  - command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )
  - touch ~/.ssh/ccdp_deploy
  - chmod 600 ~/.ssh/ccdp_deploy
  - echo $SSH_PRIVATE_KEY | base64 --decode > ~/.ssh/ccdp_deploy

  script:
  - eval "$(ssh-agent)"
  - ssh-add -k ~/.ssh/ccdp_deploy
  - ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $INSTANCE_USER@$INSTANCE_IP app-manager restart

  after_script:
  - rm -f ~/.ssh/ccdp_deploy

