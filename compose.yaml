name: climatedata-dev

services:

  portal:
    build:
      context: .
      target: development
      args:
        TASK_RUNNER_IMAGE: climatedata-task-runner:dev
        # Directory containing local WordPress plugins. Those files can be
        # downloaded using the `dockerfiles/tools/download-docker-assets.sh`
        # script.
        LOCAL_WP_PLUGINS_DIR: dockerfiles/mounts/wp-plugins
        # The dev.sh script defines the USER_ID and GROUP_ID environment variables
        WEB_SERVER_USER_ID: ${USER_ID}
        WEB_SERVER_GROUP_ID: ${GROUP_ID}
    depends_on:
      - task-runner
    volumes:
      # Source files of the themes
      - type: bind
        source: ./framework
        target: /var/www/html/assets/themes/framework
      - type: bind
        source: ./fw-child
        target: /var/www/html/assets/themes/fw-child
      # Add an HTTP header to prevent static files caching by the browser
      - type: bind
        source: dockerfiles/dev/www/configs/nginx/site-extra/no-static-cache.conf
        target: /etc/nginx/conf.d/climatedata-site/no-static-cache.conf
      # Proxy all requests to /assets/uploads to a central server containing the files
      - type: bind
        source: dockerfiles/dev/www/configs/nginx/site-extra/proxy-uploads.conf
        target: /etc/nginx/conf.d/climatedata-site/proxy-uploads.conf
      # Use a development PHP configuration
      - type: bind
        source: dockerfiles/dev/www/configs/php/php-development.ini
        target: /usr/local/etc/php/conf.d/php-development.ini
      # Mount the SSL certificate files. Those files can be downloaded using the
      # `dockerfiles/tools/download-docker-assets.sh`
      - type: bind
        source: dockerfiles/mounts/ssl
        target: /etc/nginx/ssl
    ports:
     - "443:443"
     - "80:80"
    environment:
      # Note: to set a boolean value, always quote the words "true" and "false",
      # else the YAML parser may transform them to 1 and 0. Example:
      # WP_WP_DEBUG: "true"
      WP_DB_NAME: climatedata
      WP_DB_USER: climatedata
      WP_DB_PASSWORD: climatedata
      WP_DB_HOST: db
      WP_DB_CHARSET: utf8
      WP_DB_COLLATE: ""
      WP_AUTH_KEY: ']jkQVSgz &&!>1<bK9JpD<Y_3 Xb#t|4=(g|Km+._e{YC5Bb>zrJl8I[r)!!Qq%{'
      WP_SECURE_AUTH_KEY: '/{LmO@Hj|=6|y>W|9%uEPIvd%@F,?@tOofJo6C:YnOdfQk@t-K!4n,3Kolvo fDy'
      WP_LOGGED_IN_KEY: 'K!9E9_~C;6Fqh8/i>^dWK7~F=mk!FsWOyz^y^A-0eU_a&d-ysykH9/1:/ils,F1d'
      WP_NONCE_KEY: 'azzh.48v*8iRO2l`*-=gUT_kYOD<Ig9[qUaM>phg6ip8-avN<`#TBYf?yDPL_5UO'
      WP_AUTH_SALT: '{i{+<`BhmtR`I2+9]lE2IU3!ypRkw9HjY;1}L!/OndY9nHR%N1*^W2?!?+cPG0+c'
      WP_SECURE_AUTH_SALT: 'wI~I>Rooz-+-{lNI%[g3~|# 9R4 k6I?j7vF!!{Q>I^Utr^Pr5tZuZg?Pc!+N5gF'
      WP_LOGGED_IN_SALT: 'i=GdI3/!VdU,+Y T-f?kr-.0(Q4kxiqZ[Hu*tB3TY(@W5M3mee/XRI-~[cHNOZ&j'
      WP_NONCE_SALT: 'Up<Q /#k4>;p)GYi)+--Pls<>-7NywT.JVmrW9C,bET(F@Tz*Bkp+kHtN)87<5 l'
      WP_WP_DEBUG: "true"
      # Required for the login page to work correctly
      WP_WP_SITEURL: https://dev-en.climatedata.ca/
      WP_WP_HOME: https://dev-en.climatedata.ca/

  db:
    image: registry.gitlab.com/crim.ca/clients/ccdp/portal/deployment/db:dev
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      MARIADB_ROOT_PASSWORD: root
      MARIADB_DATABASE: climatedata
      MARIADB_USER: climatedata
      MARIADB_PASSWORD: climatedata
    command: --innodb-buffer-pool-size=128M --innodb-log-buffer-size=64M --innodb-doublewrite=0 --innodb-flush-log-at-trx-commit=0

  task-runner:
    build:
      context: .
      dockerfile: dockerfiles/build/task-runner/Dockerfile
      tags:
        - climatedata-task-runner:dev
      # The dev.sh script defines the USER_ID and GROUP_ID environment variables
      args:
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
    command: ["bash", "-c", "watch-fe.sh /app"]
    volumes:
      - ".:/app"

volumes:
  db_data: {}
